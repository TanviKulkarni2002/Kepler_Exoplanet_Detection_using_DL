{"cells":[{"cell_type":"code","source":["# In this model, synthetic data was not used at all. Only original dataset was used for both training\n","# and testing purposes."],"metadata":{"id":"qDtT1GMIZpCn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Loading dataset\n","import pandas as pd\n","df = pd.read_csv('kepler.csv')\n","df.head()"],"metadata":{"id":"0unBeC3wv6xz","executionInfo":{"status":"ok","timestamp":1704878148067,"user_tz":-330,"elapsed":441,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"colab":{"base_uri":"https://localhost:8080/","height":255},"outputId":"3e91d027-a6da-42ea-d3cb-c99ed60ce96a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   rowid     kepid kepoi_name   kepler_name koi_disposition koi_pdisposition  \\\n","0      1  10797460  K00752.01  Kepler-227 b       CONFIRMED        CANDIDATE   \n","1      2  10797460  K00752.02  Kepler-227 c       CONFIRMED        CANDIDATE   \n","2      3  10811496  K00753.01           NaN  FALSE POSITIVE   FALSE POSITIVE   \n","3      4  10848459  K00754.01           NaN  FALSE POSITIVE   FALSE POSITIVE   \n","4      5  10854555  K00755.01  Kepler-664 b       CONFIRMED        CANDIDATE   \n","\n","   koi_score  koi_fpflag_nt  koi_fpflag_ss  koi_fpflag_co  ...  \\\n","0      1.000              0              0              0  ...   \n","1      0.969              0              0              0  ...   \n","2      0.000              0              1              0  ...   \n","3      0.000              0              1              0  ...   \n","4      1.000              0              0              0  ...   \n","\n","   koi_steff_err2  koi_slogg  koi_slogg_err1  koi_slogg_err2  koi_srad  \\\n","0           -81.0      4.467           0.064          -0.096     0.927   \n","1           -81.0      4.467           0.064          -0.096     0.927   \n","2          -176.0      4.544           0.044          -0.176     0.868   \n","3          -174.0      4.564           0.053          -0.168     0.791   \n","4          -211.0      4.438           0.070          -0.210     1.046   \n","\n","   koi_srad_err1  koi_srad_err2         ra        dec  koi_kepmag  \n","0          0.105         -0.061  291.93423  48.141651      15.347  \n","1          0.105         -0.061  291.93423  48.141651      15.347  \n","2          0.233         -0.078  297.00482  48.134129      15.436  \n","3          0.201         -0.067  285.53461  48.285210      15.597  \n","4          0.334         -0.133  288.75488  48.226200      15.509  \n","\n","[5 rows x 50 columns]"],"text/html":["\n","  <div id=\"df-ce7a58f6-f1d8-4be7-b521-7b021def483b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>rowid</th>\n","      <th>kepid</th>\n","      <th>kepoi_name</th>\n","      <th>kepler_name</th>\n","      <th>koi_disposition</th>\n","      <th>koi_pdisposition</th>\n","      <th>koi_score</th>\n","      <th>koi_fpflag_nt</th>\n","      <th>koi_fpflag_ss</th>\n","      <th>koi_fpflag_co</th>\n","      <th>...</th>\n","      <th>koi_steff_err2</th>\n","      <th>koi_slogg</th>\n","      <th>koi_slogg_err1</th>\n","      <th>koi_slogg_err2</th>\n","      <th>koi_srad</th>\n","      <th>koi_srad_err1</th>\n","      <th>koi_srad_err2</th>\n","      <th>ra</th>\n","      <th>dec</th>\n","      <th>koi_kepmag</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>10797460</td>\n","      <td>K00752.01</td>\n","      <td>Kepler-227 b</td>\n","      <td>CONFIRMED</td>\n","      <td>CANDIDATE</td>\n","      <td>1.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>-81.0</td>\n","      <td>4.467</td>\n","      <td>0.064</td>\n","      <td>-0.096</td>\n","      <td>0.927</td>\n","      <td>0.105</td>\n","      <td>-0.061</td>\n","      <td>291.93423</td>\n","      <td>48.141651</td>\n","      <td>15.347</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>10797460</td>\n","      <td>K00752.02</td>\n","      <td>Kepler-227 c</td>\n","      <td>CONFIRMED</td>\n","      <td>CANDIDATE</td>\n","      <td>0.969</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>-81.0</td>\n","      <td>4.467</td>\n","      <td>0.064</td>\n","      <td>-0.096</td>\n","      <td>0.927</td>\n","      <td>0.105</td>\n","      <td>-0.061</td>\n","      <td>291.93423</td>\n","      <td>48.141651</td>\n","      <td>15.347</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>10811496</td>\n","      <td>K00753.01</td>\n","      <td>NaN</td>\n","      <td>FALSE POSITIVE</td>\n","      <td>FALSE POSITIVE</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>-176.0</td>\n","      <td>4.544</td>\n","      <td>0.044</td>\n","      <td>-0.176</td>\n","      <td>0.868</td>\n","      <td>0.233</td>\n","      <td>-0.078</td>\n","      <td>297.00482</td>\n","      <td>48.134129</td>\n","      <td>15.436</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>10848459</td>\n","      <td>K00754.01</td>\n","      <td>NaN</td>\n","      <td>FALSE POSITIVE</td>\n","      <td>FALSE POSITIVE</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>-174.0</td>\n","      <td>4.564</td>\n","      <td>0.053</td>\n","      <td>-0.168</td>\n","      <td>0.791</td>\n","      <td>0.201</td>\n","      <td>-0.067</td>\n","      <td>285.53461</td>\n","      <td>48.285210</td>\n","      <td>15.597</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>10854555</td>\n","      <td>K00755.01</td>\n","      <td>Kepler-664 b</td>\n","      <td>CONFIRMED</td>\n","      <td>CANDIDATE</td>\n","      <td>1.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>-211.0</td>\n","      <td>4.438</td>\n","      <td>0.070</td>\n","      <td>-0.210</td>\n","      <td>1.046</td>\n","      <td>0.334</td>\n","      <td>-0.133</td>\n","      <td>288.75488</td>\n","      <td>48.226200</td>\n","      <td>15.509</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 50 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ce7a58f6-f1d8-4be7-b521-7b021def483b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ce7a58f6-f1d8-4be7-b521-7b021def483b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ce7a58f6-f1d8-4be7-b521-7b021def483b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cffc247d-04ab-4558-96ef-75fbdecc038a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cffc247d-04ab-4558-96ef-75fbdecc038a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cffc247d-04ab-4558-96ef-75fbdecc038a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["# Retrieving names of columns\n","df.columns"],"metadata":{"id":"oEM1sACbxpjo","executionInfo":{"status":"ok","timestamp":1704878148067,"user_tz":-330,"elapsed":10,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"f3ecdf89-5c33-4257-8b00-6df337ee40d2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['rowid', 'kepid', 'kepoi_name', 'kepler_name', 'koi_disposition',\n","       'koi_pdisposition', 'koi_score', 'koi_fpflag_nt', 'koi_fpflag_ss',\n","       'koi_fpflag_co', 'koi_fpflag_ec', 'koi_period', 'koi_period_err1',\n","       'koi_period_err2', 'koi_time0bk', 'koi_time0bk_err1',\n","       'koi_time0bk_err2', 'koi_impact', 'koi_impact_err1', 'koi_impact_err2',\n","       'koi_duration', 'koi_duration_err1', 'koi_duration_err2', 'koi_depth',\n","       'koi_depth_err1', 'koi_depth_err2', 'koi_prad', 'koi_prad_err1',\n","       'koi_prad_err2', 'koi_teq', 'koi_teq_err1', 'koi_teq_err2', 'koi_insol',\n","       'koi_insol_err1', 'koi_insol_err2', 'koi_model_snr', 'koi_tce_plnt_num',\n","       'koi_tce_delivname', 'koi_steff', 'koi_steff_err1', 'koi_steff_err2',\n","       'koi_slogg', 'koi_slogg_err1', 'koi_slogg_err2', 'koi_srad',\n","       'koi_srad_err1', 'koi_srad_err2', 'ra', 'dec', 'koi_kepmag'],\n","      dtype='object')"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["# Retrieving the no. of rows in df\n","len(df)"],"metadata":{"id":"BaoE50Q7xsg3","executionInfo":{"status":"ok","timestamp":1704878148067,"user_tz":-330,"elapsed":8,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"c96c6598-0274-4e3c-d030-4d32dc175362"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["9564"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["# Dropping unimportant columns\n","df=df.drop(['rowid', 'kepid', 'kepoi_name', 'kepler_name','koi_teq_err1','koi_teq_err2','koi_tce_delivname'],axis=1)\n","# Retrieving the no. of rows in df\n","len(df.columns)"],"metadata":{"id":"Cc48UPHhbwAo","executionInfo":{"status":"ok","timestamp":1704878148067,"user_tz":-330,"elapsed":6,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"e5fa064d-4665-44ed-9956-40301cfa6a51"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["43"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["# Plotting correaltion heatmap of df\n","import seaborn as sns\n","sns.heatmap(df.corr(), cmap='coolwarm', center=0)"],"metadata":{"id":"OQ9Jq6ivyJTU","executionInfo":{"status":"ok","timestamp":1704878149607,"user_tz":-330,"elapsed":1545,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"colab":{"base_uri":"https://localhost:8080/","height":614},"outputId":"9dba1f00-d9ba-4ccd-d469-90d793c4a7bf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-73-e7b8750ee500>:3: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  sns.heatmap(df.corr(), cmap='coolwarm', center=0)\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":73},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Retrieving unique values of column\n","df['koi_disposition'].unique()"],"metadata":{"id":"5n_eFjYPh6sS","executionInfo":{"status":"ok","timestamp":1704878149607,"user_tz":-330,"elapsed":25,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"abd832c3-0c36-4050-d14e-b029eeaeedff"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['CONFIRMED', 'FALSE POSITIVE', 'CANDIDATE'], dtype=object)"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["'''For koi_disposition:\n","CONFIRMED==1\n","CANDIDATE==0\n","FALSE POSITIVE==-1\n","'''\n","# Mapping column\n","df['new_koi_disposition'] = df['koi_disposition'].map({'CONFIRMED': 1, 'CANDIDATE': 0, 'FALSE POSITIVE': -1})"],"metadata":{"id":"KKduSh1Ug4Kq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Retrieving unique values of column\n","df['koi_pdisposition'].unique()"],"metadata":{"id":"RgJyy3wMiMgs","executionInfo":{"status":"ok","timestamp":1704878149608,"user_tz":-330,"elapsed":24,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"3c25abf9-c2ac-4eee-dd6e-ea05be0b1532"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['CANDIDATE', 'FALSE POSITIVE'], dtype=object)"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["'''For koi_pdisposition:\n","CANDIDATE==0\n","FALSE POSITIVE==-1\n","'''\n","# Mapping column\n","df['new_koi_pdisposition'] = df['koi_disposition'].map({ 'CANDIDATE': 0, 'FALSE POSITIVE': -1})"],"metadata":{"id":"17zt6eG1jDLR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Dropping String columns after creating new mapped columns\n","df=df.drop(['koi_disposition','koi_pdisposition'],axis=1)"],"metadata":{"id":"6XR1sV3sjQBx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"46wJBa5HjeHp","executionInfo":{"status":"ok","timestamp":1704878149608,"user_tz":-330,"elapsed":21,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"colab":{"base_uri":"https://localhost:8080/","height":255},"outputId":"98a65f06-31c5-4d22-c842-999e6a71be98"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   koi_score  koi_fpflag_nt  koi_fpflag_ss  koi_fpflag_co  koi_fpflag_ec  \\\n","0      1.000              0              0              0              0   \n","1      0.969              0              0              0              0   \n","2      0.000              0              1              0              0   \n","3      0.000              0              1              0              0   \n","4      1.000              0              0              0              0   \n","\n","   koi_period  koi_period_err1  koi_period_err2  koi_time0bk  \\\n","0    9.488036     2.780000e-05    -2.780000e-05   170.538750   \n","1   54.418383     2.480000e-04    -2.480000e-04   162.513840   \n","2   19.899140     1.490000e-05    -1.490000e-05   175.850252   \n","3    1.736952     2.630000e-07    -2.630000e-07   170.307565   \n","4    2.525592     3.760000e-06    -3.760000e-06   171.595550   \n","\n","   koi_time0bk_err1  ...  koi_slogg_err1  koi_slogg_err2  koi_srad  \\\n","0          0.002160  ...           0.064          -0.096     0.927   \n","1          0.003520  ...           0.064          -0.096     0.927   \n","2          0.000581  ...           0.044          -0.176     0.868   \n","3          0.000115  ...           0.053          -0.168     0.791   \n","4          0.001130  ...           0.070          -0.210     1.046   \n","\n","   koi_srad_err1  koi_srad_err2         ra        dec  koi_kepmag  \\\n","0          0.105         -0.061  291.93423  48.141651      15.347   \n","1          0.105         -0.061  291.93423  48.141651      15.347   \n","2          0.233         -0.078  297.00482  48.134129      15.436   \n","3          0.201         -0.067  285.53461  48.285210      15.597   \n","4          0.334         -0.133  288.75488  48.226200      15.509   \n","\n","   new_koi_disposition  new_koi_pdisposition  \n","0                    1                   NaN  \n","1                    1                   NaN  \n","2                   -1                  -1.0  \n","3                   -1                  -1.0  \n","4                    1                   NaN  \n","\n","[5 rows x 43 columns]"],"text/html":["\n","  <div id=\"df-eacd1586-6142-442d-b9e7-3b282cf77fc5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>koi_score</th>\n","      <th>koi_fpflag_nt</th>\n","      <th>koi_fpflag_ss</th>\n","      <th>koi_fpflag_co</th>\n","      <th>koi_fpflag_ec</th>\n","      <th>koi_period</th>\n","      <th>koi_period_err1</th>\n","      <th>koi_period_err2</th>\n","      <th>koi_time0bk</th>\n","      <th>koi_time0bk_err1</th>\n","      <th>...</th>\n","      <th>koi_slogg_err1</th>\n","      <th>koi_slogg_err2</th>\n","      <th>koi_srad</th>\n","      <th>koi_srad_err1</th>\n","      <th>koi_srad_err2</th>\n","      <th>ra</th>\n","      <th>dec</th>\n","      <th>koi_kepmag</th>\n","      <th>new_koi_disposition</th>\n","      <th>new_koi_pdisposition</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>9.488036</td>\n","      <td>2.780000e-05</td>\n","      <td>-2.780000e-05</td>\n","      <td>170.538750</td>\n","      <td>0.002160</td>\n","      <td>...</td>\n","      <td>0.064</td>\n","      <td>-0.096</td>\n","      <td>0.927</td>\n","      <td>0.105</td>\n","      <td>-0.061</td>\n","      <td>291.93423</td>\n","      <td>48.141651</td>\n","      <td>15.347</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.969</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>54.418383</td>\n","      <td>2.480000e-04</td>\n","      <td>-2.480000e-04</td>\n","      <td>162.513840</td>\n","      <td>0.003520</td>\n","      <td>...</td>\n","      <td>0.064</td>\n","      <td>-0.096</td>\n","      <td>0.927</td>\n","      <td>0.105</td>\n","      <td>-0.061</td>\n","      <td>291.93423</td>\n","      <td>48.141651</td>\n","      <td>15.347</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>19.899140</td>\n","      <td>1.490000e-05</td>\n","      <td>-1.490000e-05</td>\n","      <td>175.850252</td>\n","      <td>0.000581</td>\n","      <td>...</td>\n","      <td>0.044</td>\n","      <td>-0.176</td>\n","      <td>0.868</td>\n","      <td>0.233</td>\n","      <td>-0.078</td>\n","      <td>297.00482</td>\n","      <td>48.134129</td>\n","      <td>15.436</td>\n","      <td>-1</td>\n","      <td>-1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.736952</td>\n","      <td>2.630000e-07</td>\n","      <td>-2.630000e-07</td>\n","      <td>170.307565</td>\n","      <td>0.000115</td>\n","      <td>...</td>\n","      <td>0.053</td>\n","      <td>-0.168</td>\n","      <td>0.791</td>\n","      <td>0.201</td>\n","      <td>-0.067</td>\n","      <td>285.53461</td>\n","      <td>48.285210</td>\n","      <td>15.597</td>\n","      <td>-1</td>\n","      <td>-1.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.525592</td>\n","      <td>3.760000e-06</td>\n","      <td>-3.760000e-06</td>\n","      <td>171.595550</td>\n","      <td>0.001130</td>\n","      <td>...</td>\n","      <td>0.070</td>\n","      <td>-0.210</td>\n","      <td>1.046</td>\n","      <td>0.334</td>\n","      <td>-0.133</td>\n","      <td>288.75488</td>\n","      <td>48.226200</td>\n","      <td>15.509</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 43 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eacd1586-6142-442d-b9e7-3b282cf77fc5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-eacd1586-6142-442d-b9e7-3b282cf77fc5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-eacd1586-6142-442d-b9e7-3b282cf77fc5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-053e6e38-9c1c-4c4b-8c0f-04d02d1feea5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-053e6e38-9c1c-4c4b-8c0f-04d02d1feea5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-053e6e38-9c1c-4c4b-8c0f-04d02d1feea5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["# List of NULL values in df\n","df.isna().sum()"],"metadata":{"id":"hi7JIxYmc-Vp","executionInfo":{"status":"ok","timestamp":1704878149608,"user_tz":-330,"elapsed":21,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"a11939c6-1b6e-4280-caf8-ddaae915750c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["koi_score               1510\n","koi_fpflag_nt              0\n","koi_fpflag_ss              0\n","koi_fpflag_co              0\n","koi_fpflag_ec              0\n","koi_period                 0\n","koi_period_err1          454\n","koi_period_err2          454\n","koi_time0bk                0\n","koi_time0bk_err1         454\n","koi_time0bk_err2         454\n","koi_impact               363\n","koi_impact_err1          454\n","koi_impact_err2          454\n","koi_duration               0\n","koi_duration_err1        454\n","koi_duration_err2        454\n","koi_depth                363\n","koi_depth_err1           454\n","koi_depth_err2           454\n","koi_prad                 363\n","koi_prad_err1            363\n","koi_prad_err2            363\n","koi_teq                  363\n","koi_insol                321\n","koi_insol_err1           321\n","koi_insol_err2           321\n","koi_model_snr            363\n","koi_tce_plnt_num         346\n","koi_steff                363\n","koi_steff_err1           468\n","koi_steff_err2           483\n","koi_slogg                363\n","koi_slogg_err1           468\n","koi_slogg_err2           468\n","koi_srad                 363\n","koi_srad_err1            468\n","koi_srad_err2            468\n","ra                         0\n","dec                        0\n","koi_kepmag                 1\n","new_koi_disposition        0\n","new_koi_pdisposition    2293\n","dtype: int64"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["# Converting all values to float datatype\n","df = df.astype(float)"],"metadata":{"id":"FyZ_QEIBlbdK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Removing NULL values by imputing with mean of values of that column\n","df = df.apply(lambda col: col.fillna(col.mean()))"],"metadata":{"id":"6GY4ChfCmR35"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# List of NULL values, if any\n","df.isna().sum()"],"metadata":{"id":"oC9xXgVCmijQ","executionInfo":{"status":"ok","timestamp":1704878149608,"user_tz":-330,"elapsed":18,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"30d05638-9b04-47e4-a7d8-65f0f340e22d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["koi_score               0\n","koi_fpflag_nt           0\n","koi_fpflag_ss           0\n","koi_fpflag_co           0\n","koi_fpflag_ec           0\n","koi_period              0\n","koi_period_err1         0\n","koi_period_err2         0\n","koi_time0bk             0\n","koi_time0bk_err1        0\n","koi_time0bk_err2        0\n","koi_impact              0\n","koi_impact_err1         0\n","koi_impact_err2         0\n","koi_duration            0\n","koi_duration_err1       0\n","koi_duration_err2       0\n","koi_depth               0\n","koi_depth_err1          0\n","koi_depth_err2          0\n","koi_prad                0\n","koi_prad_err1           0\n","koi_prad_err2           0\n","koi_teq                 0\n","koi_insol               0\n","koi_insol_err1          0\n","koi_insol_err2          0\n","koi_model_snr           0\n","koi_tce_plnt_num        0\n","koi_steff               0\n","koi_steff_err1          0\n","koi_steff_err2          0\n","koi_slogg               0\n","koi_slogg_err1          0\n","koi_slogg_err2          0\n","koi_srad                0\n","koi_srad_err1           0\n","koi_srad_err2           0\n","ra                      0\n","dec                     0\n","koi_kepmag              0\n","new_koi_disposition     0\n","new_koi_pdisposition    0\n","dtype: int64"]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":["# View of processed df\n","df.head()"],"metadata":{"id":"gCVvG1wPltzg","executionInfo":{"status":"ok","timestamp":1704878149608,"user_tz":-330,"elapsed":16,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"colab":{"base_uri":"https://localhost:8080/","height":255},"outputId":"5187c03c-a8ba-406d-a567-e225903af175"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   koi_score  koi_fpflag_nt  koi_fpflag_ss  koi_fpflag_co  koi_fpflag_ec  \\\n","0      1.000            0.0            0.0            0.0            0.0   \n","1      0.969            0.0            0.0            0.0            0.0   \n","2      0.000            0.0            1.0            0.0            0.0   \n","3      0.000            0.0            1.0            0.0            0.0   \n","4      1.000            0.0            0.0            0.0            0.0   \n","\n","   koi_period  koi_period_err1  koi_period_err2  koi_time0bk  \\\n","0    9.488036     2.780000e-05    -2.780000e-05   170.538750   \n","1   54.418383     2.480000e-04    -2.480000e-04   162.513840   \n","2   19.899140     1.490000e-05    -1.490000e-05   175.850252   \n","3    1.736952     2.630000e-07    -2.630000e-07   170.307565   \n","4    2.525592     3.760000e-06    -3.760000e-06   171.595550   \n","\n","   koi_time0bk_err1  ...  koi_slogg_err1  koi_slogg_err2  koi_srad  \\\n","0          0.002160  ...           0.064          -0.096     0.927   \n","1          0.003520  ...           0.064          -0.096     0.927   \n","2          0.000581  ...           0.044          -0.176     0.868   \n","3          0.000115  ...           0.053          -0.168     0.791   \n","4          0.001130  ...           0.070          -0.210     1.046   \n","\n","   koi_srad_err1  koi_srad_err2         ra        dec  koi_kepmag  \\\n","0          0.105         -0.061  291.93423  48.141651      15.347   \n","1          0.105         -0.061  291.93423  48.141651      15.347   \n","2          0.233         -0.078  297.00482  48.134129      15.436   \n","3          0.201         -0.067  285.53461  48.285210      15.597   \n","4          0.334         -0.133  288.75488  48.226200      15.509   \n","\n","   new_koi_disposition  new_koi_pdisposition  \n","0                  1.0             -0.690827  \n","1                  1.0             -0.690827  \n","2                 -1.0             -1.000000  \n","3                 -1.0             -1.000000  \n","4                  1.0             -0.690827  \n","\n","[5 rows x 43 columns]"],"text/html":["\n","  <div id=\"df-4e490358-e7ce-470a-85dd-93f861650b55\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>koi_score</th>\n","      <th>koi_fpflag_nt</th>\n","      <th>koi_fpflag_ss</th>\n","      <th>koi_fpflag_co</th>\n","      <th>koi_fpflag_ec</th>\n","      <th>koi_period</th>\n","      <th>koi_period_err1</th>\n","      <th>koi_period_err2</th>\n","      <th>koi_time0bk</th>\n","      <th>koi_time0bk_err1</th>\n","      <th>...</th>\n","      <th>koi_slogg_err1</th>\n","      <th>koi_slogg_err2</th>\n","      <th>koi_srad</th>\n","      <th>koi_srad_err1</th>\n","      <th>koi_srad_err2</th>\n","      <th>ra</th>\n","      <th>dec</th>\n","      <th>koi_kepmag</th>\n","      <th>new_koi_disposition</th>\n","      <th>new_koi_pdisposition</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>9.488036</td>\n","      <td>2.780000e-05</td>\n","      <td>-2.780000e-05</td>\n","      <td>170.538750</td>\n","      <td>0.002160</td>\n","      <td>...</td>\n","      <td>0.064</td>\n","      <td>-0.096</td>\n","      <td>0.927</td>\n","      <td>0.105</td>\n","      <td>-0.061</td>\n","      <td>291.93423</td>\n","      <td>48.141651</td>\n","      <td>15.347</td>\n","      <td>1.0</td>\n","      <td>-0.690827</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.969</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>54.418383</td>\n","      <td>2.480000e-04</td>\n","      <td>-2.480000e-04</td>\n","      <td>162.513840</td>\n","      <td>0.003520</td>\n","      <td>...</td>\n","      <td>0.064</td>\n","      <td>-0.096</td>\n","      <td>0.927</td>\n","      <td>0.105</td>\n","      <td>-0.061</td>\n","      <td>291.93423</td>\n","      <td>48.141651</td>\n","      <td>15.347</td>\n","      <td>1.0</td>\n","      <td>-0.690827</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.000</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>19.899140</td>\n","      <td>1.490000e-05</td>\n","      <td>-1.490000e-05</td>\n","      <td>175.850252</td>\n","      <td>0.000581</td>\n","      <td>...</td>\n","      <td>0.044</td>\n","      <td>-0.176</td>\n","      <td>0.868</td>\n","      <td>0.233</td>\n","      <td>-0.078</td>\n","      <td>297.00482</td>\n","      <td>48.134129</td>\n","      <td>15.436</td>\n","      <td>-1.0</td>\n","      <td>-1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.000</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.736952</td>\n","      <td>2.630000e-07</td>\n","      <td>-2.630000e-07</td>\n","      <td>170.307565</td>\n","      <td>0.000115</td>\n","      <td>...</td>\n","      <td>0.053</td>\n","      <td>-0.168</td>\n","      <td>0.791</td>\n","      <td>0.201</td>\n","      <td>-0.067</td>\n","      <td>285.53461</td>\n","      <td>48.285210</td>\n","      <td>15.597</td>\n","      <td>-1.0</td>\n","      <td>-1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2.525592</td>\n","      <td>3.760000e-06</td>\n","      <td>-3.760000e-06</td>\n","      <td>171.595550</td>\n","      <td>0.001130</td>\n","      <td>...</td>\n","      <td>0.070</td>\n","      <td>-0.210</td>\n","      <td>1.046</td>\n","      <td>0.334</td>\n","      <td>-0.133</td>\n","      <td>288.75488</td>\n","      <td>48.226200</td>\n","      <td>15.509</td>\n","      <td>1.0</td>\n","      <td>-0.690827</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 43 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e490358-e7ce-470a-85dd-93f861650b55')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4e490358-e7ce-470a-85dd-93f861650b55 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4e490358-e7ce-470a-85dd-93f861650b55');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3fded8af-babb-4457-a75a-78e377e323c5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3fded8af-babb-4457-a75a-78e377e323c5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3fded8af-babb-4457-a75a-78e377e323c5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["'''For koi_disposition:\n","CONFIRMED==1\n","CANDIDATE==0\n","FALSE POSITIVE==-1\n","'''\n","# For understanding the dataset distribution\n","conf=0 # count of confirmed exoplanets\n","falpos=0 #count of false positives\n","cand=0 # count of candidates\n","for i in df['new_koi_disposition']:\n","  if i==1:\n","    conf+=1\n","  elif i==-1:\n","    falpos+=1\n","  else:\n","    cand+=1\n","print(\"Count of confirmed exoplanets: \",conf)\n","print(\"Count of false positives: \",falpos)\n","print(\"Count of candidates: \",cand)"],"metadata":{"id":"OCL_CWMeeDPg","executionInfo":{"status":"ok","timestamp":1704878149608,"user_tz":-330,"elapsed":16,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"8ad2af77-105f-4802-8b38-77cd9fdf2c66"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Count of confirmed exoplanets:  2293\n","Count of false positives:  5023\n","Count of candidates:  2248\n"]}]},{"cell_type":"code","source":["'''For koi_pdisposition:\n","CANDIDATE==0\n","FALSE POSITIVE==-1\n","'''\n","# For understanding the dataset distribution\n","falpos=0 #count of false positives\n","cand=0 # count of candidates\n","for i in df['new_koi_pdisposition']:\n","  if i==-1:\n","    falpos+=1\n","  else:\n","    cand+=1\n","print(\"Count of false positives: \",falpos)\n","print(\"Count of candidates: \",cand)"],"metadata":{"id":"cnOHdGBuff5O","executionInfo":{"status":"ok","timestamp":1704878149608,"user_tz":-330,"elapsed":14,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"3023d858-17ba-4dfa-d30a-37482990d6e2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Count of false positives:  5023\n","Count of candidates:  4541\n"]}]},{"cell_type":"code","source":["# Target Variable: new_koi_disposition (confirmed=1,candidate=0,false positive=-1)"],"metadata":{"id":"oRpHndBMmK3v"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Train and Test datasets created\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","\n","# Shuffle the DataFrame\n","df = df.sample(frac=1, random_state=42)  # You can use any random_state value for reproducibility\n","\n","# Extract features and target variable from the shuffled DataFrame\n","X = df.drop('new_koi_disposition', axis=1)\n","y = df['new_koi_disposition']\n","\n","# Perform an 80-20 train-test split on the shuffled data\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) # train-test: 80-20 split\n","\n","print(\"Length of training data: \",len(X_train),len(y_train))\n","print(\"Length of testing data: \",len(X_test),len(y_test))"],"metadata":{"id":"ex1HGWnBGaOC","executionInfo":{"status":"ok","timestamp":1704878149608,"user_tz":-330,"elapsed":13,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"9fb41f4a-1410-43d1-e27d-259ffad17c32"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Length of training data:  7651 7651\n","Length of testing data:  1913 1913\n"]}]},{"cell_type":"code","source":["# Reshape X_train to have the shape (number_of_samples, timesteps, input_dim)\n","X_train = X_train.to_numpy()\n","X_train = X_train.reshape((X_train.shape[0], X_train.shape[1], 1))  # Assuming X_train.shape[1] is your original_shape_1\n","\n","# Similarly, reshape y_train to have the shape (number_of_samples, 1)\n","y_train = y_train.to_numpy()\n","y_train = y_train.reshape((y_train.shape[0], 1))\n","\n","# Building the model\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Conv1D, MaxPooling1D, Flatten, Dense\n","\n","# Build the model\n","model = Sequential()\n","model.add(Conv1D(200, kernel_size=2, activation='tanh', input_shape=(X_train.shape[1], 1)))\n","model.add(MaxPooling1D(pool_size=1))\n","model.add(Conv1D(200, kernel_size=2, activation='tanh'))\n","model.add(MaxPooling1D(pool_size=1))\n","model.add(Flatten())\n","model.add(Dense(200, activation='tanh'))\n","model.add(Dense(1, activation='tanh'))\n","\n","# Compile the model\n","model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\n","\n","# Train the model\n","model.fit(X_train, y_train, epochs=20, batch_size=32)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x4VqeSk_CqUJ","executionInfo":{"status":"ok","timestamp":1704878352538,"user_tz":-330,"elapsed":202942,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"outputId":"260ee71e-0340-417b-ce8b-9fd9b6b81b3d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/20\n","240/240 [==============================] - 11s 38ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 2/20\n","240/240 [==============================] - 10s 41ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 3/20\n","240/240 [==============================] - 9s 39ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 4/20\n","240/240 [==============================] - 9s 35ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 5/20\n","240/240 [==============================] - 10s 40ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 6/20\n","240/240 [==============================] - 9s 39ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 7/20\n","240/240 [==============================] - 8s 34ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 8/20\n","240/240 [==============================] - 9s 38ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 9/20\n","240/240 [==============================] - 9s 38ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 10/20\n","240/240 [==============================] - 9s 36ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 11/20\n","240/240 [==============================] - 10s 41ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 12/20\n","240/240 [==============================] - 10s 40ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 13/20\n","240/240 [==============================] - 8s 34ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 14/20\n","240/240 [==============================] - 10s 40ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 15/20\n","240/240 [==============================] - 10s 40ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 16/20\n","240/240 [==============================] - 8s 34ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 17/20\n","240/240 [==============================] - 10s 41ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 18/20\n","240/240 [==============================] - 10s 42ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 19/20\n","240/240 [==============================] - 9s 37ms/step - loss: -4.4233 - accuracy: 0.2330\n","Epoch 20/20\n","240/240 [==============================] - 9s 38ms/step - loss: -4.4233 - accuracy: 0.2330\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7b2a53082c20>"]},"metadata":{},"execution_count":89}]},{"cell_type":"code","source":["# Predicting on the test data\n","# Reshape the input data\n","# X_test and y_test has the shape (number_of_samples, original_shape_1, original_shape_2)\n","X_test = X_test.to_numpy()\n","X_test = X_test.reshape((X_test.shape[0], X_test.shape[1], 1))\n","y_test = y_test.to_numpy()\n","y_test = y_test.reshape((y_test.shape[0], 1))\n","y_pred = model.predict(X_test)\n","# for i in y_pred:\n","#   print(i)\n","# print(len(y_pred))"],"metadata":{"id":"pPe0pkaZCuQY","executionInfo":{"status":"ok","timestamp":1704878353621,"user_tz":-330,"elapsed":1096,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"9a854488-1d6a-425d-984e-7fa81ed84ab2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["60/60 [==============================] - 1s 8ms/step\n"]}]},{"cell_type":"code","source":["# Assigning closest labels\n","import numpy as np\n","y_pred = y_pred.astype(float)\n","for i in y_pred:\n","  if i<0:\n","    y_pred[np.where(y_pred == i)] = -1\n","  if i>=0.5:\n","    y_pred[np.where(y_pred == i)] = 1\n","  else:\n","    y_pred[np.where(y_pred == i)] = 0\n","\n","# for i in y_pred:\n","#    print(i)"],"metadata":{"id":"4yMI9FMH8Uyw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Calculate confusion matrix\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import confusion_matrix\n","import seaborn as sns\n","\n","cm = confusion_matrix(y_test, y_pred)\n","\n","# Plot confusion matrix\n","plt.figure(figsize=(8, 6))\n","sns.heatmap(cm, annot=True, fmt='g', cmap=plt.cm.Reds, xticklabels=['Confirmed','Candidate', 'False Positive'], yticklabels=['Confirmed','Candidate', 'False Positive'])\n","plt.title('Confusion Matrix')\n","plt.xlabel('Predicted')\n","plt.ylabel('Actual')\n","plt.show()"],"metadata":{"id":"M-piWo5uD5pJ","executionInfo":{"status":"ok","timestamp":1704878353622,"user_tz":-330,"elapsed":13,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"colab":{"base_uri":"https://localhost:8080/","height":564},"outputId":"10dcf327-c591-4704-9434-8dcdf36ea755"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Calculate RMSE\n","import numpy as np\n","from sklearn.metrics import mean_squared_error\n","\n","mse = mean_squared_error(y_test, y_pred)\n","rmse = np.sqrt(mse)\n","print(\"RMSE: \",rmse)"],"metadata":{"id":"-RyZrJim8el4","executionInfo":{"status":"ok","timestamp":1704878353622,"user_tz":-330,"elapsed":12,"user":{"displayName":"Tanvi Kulkarni","userId":"13034037341589324941"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"f4b95abc-b73e-4e39-d80b-d5eeb9e53db2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["RMSE:  0.8700151112362383\n"]}]}],"metadata":{"colab":{"provenance":[{"file_id":"16r5KbpmqVLlWLwDCoYEC21F9rvppuze8","timestamp":1704783906880},{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1704611734282}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}